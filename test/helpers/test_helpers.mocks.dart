// Mocks generated by Mockito 5.4.4 from annotations
// in thrivia_app/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i13;

import 'package:dio/dio.dart' as _i4;
import 'package:flutter/material.dart' as _i11;
import 'package:logger/src/logger.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:stacked_services/stacked_services.dart' as _i9;
import 'package:thrivia_app/feat_auth/data_models/data_models.barrel.dart'
    as _i2;
import 'package:thrivia_app/feat_auth/repository/auth_repository_service.dart'
    as _i14;
import 'package:thrivia_app/feat_auth/services/auth_service.dart' as _i19;
import 'package:thrivia_app/feat_cooperative/data_models/data_models.dart'
    as _i5;
import 'package:thrivia_app/feat_cooperative/data_models/transactionResponse.dart'
    as _i6;
import 'package:thrivia_app/feat_cooperative/repository/cooperatives_repository_service.dart'
    as _i17;
import 'package:thrivia_app/feat_loan/data_models/loanResponse.dart' as _i18;
import 'package:thrivia_app/feat_users/data_models/user.dart' as _i7;
import 'package:thrivia_app/feat_users/repository/users_repository.dart' as _i8;
import 'package:thrivia_app/services/dio_service.dart' as _i15;
import 'package:thrivia_app/services/storage_service.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCreateAccountResponse_0 extends _i1.SmartFake
    implements _i2.CreateAccountResponse {
  _FakeCreateAccountResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerifyOTPBody_1 extends _i1.SmartFake implements _i2.VerifyOTPBody {
  _FakeVerifyOTPBody_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_2 extends _i1.SmartFake implements _i3.Logger {
  _FakeLogger_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_3 extends _i1.SmartFake implements _i4.Dio {
  _FakeDio_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePayment_4 extends _i1.SmartFake implements _i5.Payment {
  _FakePayment_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCooperative_5 extends _i1.SmartFake implements _i5.Cooperative {
  _FakeCooperative_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionResponse_6 extends _i1.SmartFake
    implements _i6.TransactionResponse {
  _FakeTransactionResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplication_7 extends _i1.SmartFake implements _i5.Application {
  _FakeApplication_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWithdrawalRequest_8 extends _i1.SmartFake
    implements _i5.WithdrawalRequest {
  _FakeWithdrawalRequest_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRejectApplicationResponse_9 extends _i1.SmartFake
    implements _i5.RejectApplicationResponse {
  _FakeRejectApplicationResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_10 extends _i1.SmartFake implements _i7.User {
  _FakeUser_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCooperativeApplication_11 extends _i1.SmartFake
    implements _i8.CooperativeApplication {
  _FakeCooperativeApplication_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i9.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i11.GlobalKey<_i11.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i11.GlobalKey<_i11.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i9.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<T?>? navigateWithTransition<T>(
    _i11.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i11.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i9.Transition? transitionClass,
    _i9.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? replaceWithTransition<T>(
    _i11.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i11.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i9.Transition? transitionClass,
    _i9.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i11.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i11.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? navigateToView<T>(
    _i11.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i11.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i9.Transition? transition,
    _i9.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i11.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? clearStackAndShowView<T>(
    _i11.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? clearTillFirstAndShowView<T>(
    _i11.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);

  @override
  _i12.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i11.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i9.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i9.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<_i9.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i12.Future<_i9.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i12.Future<_i9.SheetResponse<dynamic>?>.value(),
      ) as _i12.Future<_i9.SheetResponse<dynamic>?>);

  @override
  _i12.Future<_i9.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i13.Color? barrierColor = const _i13.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i12.Future<_i9.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i12.Future<_i9.SheetResponse<T>?>.value(),
      ) as _i12.Future<_i9.SheetResponse<T>?>);

  @override
  void completeSheet(_i9.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i9.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i9.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i11.Widget Function(
      _i11.BuildContext,
      _i9.DialogRequest<dynamic>,
      dynamic Function(_i9.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<_i9.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i13.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i13.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i9.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i12.Future<_i9.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i12.Future<_i9.DialogResponse<dynamic>?>.value(),
      ) as _i12.Future<_i9.DialogResponse<dynamic>?>);

  @override
  _i12.Future<_i9.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i13.Color? barrierColor = const _i13.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i12.Future<_i9.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i12.Future<_i9.DialogResponse<T>?>.value(),
      ) as _i12.Future<_i9.DialogResponse<T>?>);

  @override
  _i12.Future<_i9.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i13.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i13.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i9.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i12.Future<_i9.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i12.Future<_i9.DialogResponse<dynamic>?>.value(),
      ) as _i12.Future<_i9.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i9.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i14.AuthRepository {
  @override
  _i12.FutureOr<_i2.CreateAccountResponse> createAccount(
          _i2.CreateUserRequest? newUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [newUser],
        ),
        returnValue: _i12.Future<_i2.CreateAccountResponse>.value(
            _FakeCreateAccountResponse_0(
          this,
          Invocation.method(
            #createAccount,
            [newUser],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i2.CreateAccountResponse>.value(
            _FakeCreateAccountResponse_0(
          this,
          Invocation.method(
            #createAccount,
            [newUser],
          ),
        )),
      ) as _i12.FutureOr<_i2.CreateAccountResponse>);

  @override
  _i12.FutureOr<dynamic> loginUser(_i2.LoginUserRequest? userLogin) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [userLogin],
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<dynamic>);

  @override
  _i12.FutureOr<dynamic> verifyOTP(_i2.VerifyOTPBody? tokenData) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [tokenData],
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<dynamic>);

  @override
  _i12.FutureOr<String> requestOTP(_i2.SendOTPRequest? sendOTPData) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestOTP,
          [sendOTPData],
        ),
        returnValue: _i12.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #requestOTP,
            [sendOTPData],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #requestOTP,
            [sendOTPData],
          ),
        )),
      ) as _i12.FutureOr<String>);

  @override
  _i12.FutureOr<_i2.VerifyOTPBody> intiateResetPassword(
          String? emailOrPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #intiateResetPassword,
          [emailOrPhoneNumber],
        ),
        returnValue: _i12.Future<_i2.VerifyOTPBody>.value(_FakeVerifyOTPBody_1(
          this,
          Invocation.method(
            #intiateResetPassword,
            [emailOrPhoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i2.VerifyOTPBody>.value(_FakeVerifyOTPBody_1(
          this,
          Invocation.method(
            #intiateResetPassword,
            [emailOrPhoneNumber],
          ),
        )),
      ) as _i12.FutureOr<_i2.VerifyOTPBody>);

  @override
  _i12.FutureOr<void> resetPassword(
    String? newPassword,
    String? accessToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            newPassword,
            accessToken,
          ],
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<void>);
}

/// A class which mocks [DioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioService extends _i1.Mock implements _i15.DioService {
  @override
  _i3.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i3.Logger);

  @override
  _i4.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_3(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_3(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i4.Dio);

  @override
  String logAPIResponse(_i4.Response<dynamic>? response) => (super.noSuchMethod(
        Invocation.method(
          #logAPIResponse,
          [response],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #logAPIResponse,
            [response],
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #logAPIResponse,
            [response],
          ),
        ),
      ) as String);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i16.StorageService {
  @override
  _i12.Future<String?> getValue(
    String? key, [
    String? ifnull,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [
            key,
            ifnull,
          ],
        ),
        returnValue: _i12.Future<String?>.value(),
        returnValueForMissingStub: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.FutureOr<void> setValue(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setValue,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<void>);
}

/// A class which mocks [CooperativeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCooperativeRepository extends _i1.Mock
    implements _i17.CooperativeRepository {
  @override
  _i12.Future<void> approveApplication({
    required String? uuid,
    required String? applicationUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveApplication,
          [],
          {
            #uuid: uuid,
            #applicationUuid: applicationUuid,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> approveLoan({
    required String? uuid,
    required String? loanUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveLoan,
          [],
          {
            #uuid: uuid,
            #loanUuid: loanUuid,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i5.Payment> approveWithdrawalRequest({
    required String? uuid,
    required String? requestUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveWithdrawalRequest,
          [],
          {
            #uuid: uuid,
            #requestUuid: requestUuid,
          },
        ),
        returnValue: _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #approveWithdrawalRequest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #approveWithdrawalRequest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.Payment>);

  @override
  _i12.Future<_i5.Cooperative> createCooperative(
          _i5.CreateCooperativeRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCooperative,
          [request],
        ),
        returnValue: _i12.Future<_i5.Cooperative>.value(_FakeCooperative_5(
          this,
          Invocation.method(
            #createCooperative,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.Cooperative>.value(_FakeCooperative_5(
          this,
          Invocation.method(
            #createCooperative,
            [request],
          ),
        )),
      ) as _i12.Future<_i5.Cooperative>);

  @override
  _i12.Future<_i6.TransactionResponse> deposit({
    required String? uuid,
    required String? walletUuid,
    required _i5.DepositMoneyRequest? depositMoneyRequest,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deposit,
          [],
          {
            #uuid: uuid,
            #walletUuid: walletUuid,
            #depositMoneyRequest: depositMoneyRequest,
          },
        ),
        returnValue: _i12.Future<_i6.TransactionResponse>.value(
            _FakeTransactionResponse_6(
          this,
          Invocation.method(
            #deposit,
            [],
            {
              #uuid: uuid,
              #walletUuid: walletUuid,
              #depositMoneyRequest: depositMoneyRequest,
            },
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i6.TransactionResponse>.value(
            _FakeTransactionResponse_6(
          this,
          Invocation.method(
            #deposit,
            [],
            {
              #uuid: uuid,
              #walletUuid: walletUuid,
              #depositMoneyRequest: depositMoneyRequest,
            },
          ),
        )),
      ) as _i12.Future<_i6.TransactionResponse>);

  @override
  _i12.Future<_i5.Application> getApplication({
    required String? uuid,
    required String? requestUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplication,
          [],
          {
            #uuid: uuid,
            #requestUuid: requestUuid,
          },
        ),
        returnValue: _i12.Future<_i5.Application>.value(_FakeApplication_7(
          this,
          Invocation.method(
            #getApplication,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.Application>.value(_FakeApplication_7(
          this,
          Invocation.method(
            #getApplication,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.Application>);

  @override
  _i12.Future<List<_i5.Application>> getApplications(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplications,
          [uuid],
        ),
        returnValue:
            _i12.Future<List<_i5.Application>>.value(<_i5.Application>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.Application>>.value(<_i5.Application>[]),
      ) as _i12.Future<List<_i5.Application>>);

  @override
  _i12.Future<List<_i5.Members>> getMembers(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembers,
          [uuid],
        ),
        returnValue: _i12.Future<List<_i5.Members>>.value(<_i5.Members>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.Members>>.value(<_i5.Members>[]),
      ) as _i12.Future<List<_i5.Members>>);

  @override
  _i12.Future<List<_i18.LoanResponse>> getPendingLoans(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingLoans,
          [uuid],
        ),
        returnValue:
            _i12.Future<List<_i18.LoanResponse>>.value(<_i18.LoanResponse>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i18.LoanResponse>>.value(<_i18.LoanResponse>[]),
      ) as _i12.Future<List<_i18.LoanResponse>>);

  @override
  _i12.Future<List<_i18.LoanResponse>> getUserLoans({
    required String? uuid,
    required _i2.LoanStatus? loanStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLoans,
          [],
          {
            #uuid: uuid,
            #loanStatus: loanStatus,
          },
        ),
        returnValue:
            _i12.Future<List<_i18.LoanResponse>>.value(<_i18.LoanResponse>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i18.LoanResponse>>.value(<_i18.LoanResponse>[]),
      ) as _i12.Future<List<_i18.LoanResponse>>);

  @override
  _i12.Future<List<_i6.TransactionResponse>> getWalletTransactions({
    required String? uuid,
    required String? walletUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletTransactions,
          [],
          {
            #uuid: uuid,
            #walletUuid: walletUuid,
          },
        ),
        returnValue: _i12.Future<List<_i6.TransactionResponse>>.value(
            <_i6.TransactionResponse>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i6.TransactionResponse>>.value(
                <_i6.TransactionResponse>[]),
      ) as _i12.Future<List<_i6.TransactionResponse>>);

  @override
  _i12.Future<List<_i5.Wallet>> getWallets(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #getWallets,
          [uuid],
        ),
        returnValue: _i12.Future<List<_i5.Wallet>>.value(<_i5.Wallet>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.Wallet>>.value(<_i5.Wallet>[]),
      ) as _i12.Future<List<_i5.Wallet>>);

  @override
  _i12.Future<List<_i5.WithdrawalRequest>> getWithdrawalRequests(
          String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWithdrawalRequests,
          [uuid],
        ),
        returnValue: _i12.Future<List<_i5.WithdrawalRequest>>.value(
            <_i5.WithdrawalRequest>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.WithdrawalRequest>>.value(
                <_i5.WithdrawalRequest>[]),
      ) as _i12.Future<List<_i5.WithdrawalRequest>>);

  @override
  _i12.Future<_i5.WithdrawalRequest> getWithdrawalReuest({
    required String? uuid,
    required String? requestUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWithdrawalReuest,
          [],
          {
            #uuid: uuid,
            #requestUuid: requestUuid,
          },
        ),
        returnValue:
            _i12.Future<_i5.WithdrawalRequest>.value(_FakeWithdrawalRequest_8(
          this,
          Invocation.method(
            #getWithdrawalReuest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.WithdrawalRequest>.value(_FakeWithdrawalRequest_8(
          this,
          Invocation.method(
            #getWithdrawalReuest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.WithdrawalRequest>);

  @override
  _i12.Future<_i5.RejectApplicationResponse> rejectApplication({
    required String? uuid,
    required String? requestUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectApplication,
          [],
          {
            #uuid: uuid,
            #requestUuid: requestUuid,
          },
        ),
        returnValue: _i12.Future<_i5.RejectApplicationResponse>.value(
            _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectApplication,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.RejectApplicationResponse>.value(
                _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectApplication,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.RejectApplicationResponse>);

  @override
  _i12.Future<_i5.RejectApplicationResponse> rejectLoan({
    required String? uuid,
    required String? loanUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectLoan,
          [],
          {
            #uuid: uuid,
            #loanUuid: loanUuid,
          },
        ),
        returnValue: _i12.Future<_i5.RejectApplicationResponse>.value(
            _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectLoan,
            [],
            {
              #uuid: uuid,
              #loanUuid: loanUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.RejectApplicationResponse>.value(
                _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectLoan,
            [],
            {
              #uuid: uuid,
              #loanUuid: loanUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.RejectApplicationResponse>);

  @override
  _i12.Future<_i5.RejectApplicationResponse> rejectWithdrawalRequest({
    required String? uuid,
    required String? requestUuid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectWithdrawalRequest,
          [],
          {
            #uuid: uuid,
            #requestUuid: requestUuid,
          },
        ),
        returnValue: _i12.Future<_i5.RejectApplicationResponse>.value(
            _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectWithdrawalRequest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.RejectApplicationResponse>.value(
                _FakeRejectApplicationResponse_9(
          this,
          Invocation.method(
            #rejectWithdrawalRequest,
            [],
            {
              #uuid: uuid,
              #requestUuid: requestUuid,
            },
          ),
        )),
      ) as _i12.Future<_i5.RejectApplicationResponse>);

  @override
  _i12.Future<_i5.Payment> verifyTransaction({
    required String? transactionId,
    required _i5.PaymentInfoRequest? paymentInfo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTransaction,
          [],
          {
            #transactionId: transactionId,
            #paymentInfo: paymentInfo,
          },
        ),
        returnValue: _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #verifyTransaction,
            [],
            {
              #transactionId: transactionId,
              #paymentInfo: paymentInfo,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #verifyTransaction,
            [],
            {
              #transactionId: transactionId,
              #paymentInfo: paymentInfo,
            },
          ),
        )),
      ) as _i12.Future<_i5.Payment>);

  @override
  _i12.Future<_i5.Payment> withdraw({
    required String? uuid,
    required String? walletUuid,
    required _i5.PaymentInfoRequest? paymentInfo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdraw,
          [],
          {
            #uuid: uuid,
            #walletUuid: walletUuid,
            #paymentInfo: paymentInfo,
          },
        ),
        returnValue: _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #withdraw,
            [],
            {
              #uuid: uuid,
              #walletUuid: walletUuid,
              #paymentInfo: paymentInfo,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.Payment>.value(_FakePayment_4(
          this,
          Invocation.method(
            #withdraw,
            [],
            {
              #uuid: uuid,
              #walletUuid: walletUuid,
              #paymentInfo: paymentInfo,
            },
          ),
        )),
      ) as _i12.Future<_i5.Payment>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i19.AuthService {
  @override
  _i3.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i3.Logger);

  @override
  _i2.AuthState get authState => (super.noSuchMethod(
        Invocation.getter(#authState),
        returnValue: _i2.AuthState.loggedIn,
        returnValueForMissingStub: _i2.AuthState.loggedIn,
      ) as _i2.AuthState);

  @override
  bool get goToOTPScreen => (super.noSuchMethod(
        Invocation.getter(#goToOTPScreen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i12.FutureOr<void> createAccount(_i2.CreateUserRequest? newUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [newUser],
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<void>);

  @override
  _i12.FutureOr<void> loginUser({
    required String? emailOrPhone,
    required String? password,
    _i2.Role? role,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [],
          {
            #emailOrPhone: emailOrPhone,
            #password: password,
            #role: role,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i12.FutureOr<void>);

  @override
  _i12.Future<void> verifyOTP(String? otp) => (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [otp],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> requestOTP() => (super.noSuchMethod(
        Invocation.method(
          #requestOTP,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> initiateResetPassword(String? emailPhoneNumberValue) =>
      (super.noSuchMethod(
        Invocation.method(
          #initiateResetPassword,
          [emailPhoneNumberValue],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> resetPassword(String? password) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [password],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UsersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersRepository extends _i1.Mock implements _i8.UsersRepository {
  @override
  _i12.Future<_i7.User> createUser(_i2.CreateUserRequest? newUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [newUser],
        ),
        returnValue: _i12.Future<_i7.User>.value(_FakeUser_10(
          this,
          Invocation.method(
            #createUser,
            [newUser],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i7.User>.value(_FakeUser_10(
          this,
          Invocation.method(
            #createUser,
            [newUser],
          ),
        )),
      ) as _i12.Future<_i7.User>);

  @override
  _i12.Future<void> setActiveCooperative(
    String? userId,
    String? cooperativeId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setActiveCooperative,
          [
            userId,
            cooperativeId,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i5.Cooperative>> getCooperatives() => (super.noSuchMethod(
        Invocation.method(
          #getCooperatives,
          [],
        ),
        returnValue:
            _i12.Future<List<_i5.Cooperative>>.value(<_i5.Cooperative>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.Cooperative>>.value(<_i5.Cooperative>[]),
      ) as _i12.Future<List<_i5.Cooperative>>);

  @override
  _i12.Future<_i8.CooperativeApplication> createCooperativeApplication(
          Map<String, dynamic>? applicationData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCooperativeApplication,
          [applicationData],
        ),
        returnValue: _i12.Future<_i8.CooperativeApplication>.value(
            _FakeCooperativeApplication_11(
          this,
          Invocation.method(
            #createCooperativeApplication,
            [applicationData],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i8.CooperativeApplication>.value(
                _FakeCooperativeApplication_11(
          this,
          Invocation.method(
            #createCooperativeApplication,
            [applicationData],
          ),
        )),
      ) as _i12.Future<_i8.CooperativeApplication>);

  @override
  _i12.Future<_i8.CooperativeApplication> getCooperativeApplicationById(
          String? applicationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCooperativeApplicationById,
          [applicationId],
        ),
        returnValue: _i12.Future<_i8.CooperativeApplication>.value(
            _FakeCooperativeApplication_11(
          this,
          Invocation.method(
            #getCooperativeApplicationById,
            [applicationId],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i8.CooperativeApplication>.value(
                _FakeCooperativeApplication_11(
          this,
          Invocation.method(
            #getCooperativeApplicationById,
            [applicationId],
          ),
        )),
      ) as _i12.Future<_i8.CooperativeApplication>);

  @override
  _i12.Future<List<_i8.CooperativeApplication>> getCooperativeApplications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCooperativeApplications,
          [],
        ),
        returnValue: _i12.Future<List<_i8.CooperativeApplication>>.value(
            <_i8.CooperativeApplication>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i8.CooperativeApplication>>.value(
                <_i8.CooperativeApplication>[]),
      ) as _i12.Future<List<_i8.CooperativeApplication>>);

  @override
  _i12.Future<List<_i5.Wallet>> getWallets(String? cooperativeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWallets,
          [cooperativeId],
        ),
        returnValue: _i12.Future<List<_i5.Wallet>>.value(<_i5.Wallet>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.Wallet>>.value(<_i5.Wallet>[]),
      ) as _i12.Future<List<_i5.Wallet>>);

  @override
  _i12.Future<void> depositToWallet(
    String? walletId,
    double? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #depositToWallet,
          [
            walletId,
            amount,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> withdrawFromWallet(
    String? walletId,
    double? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdrawFromWallet,
          [
            walletId,
            amount,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i5.WithdrawalRequest>> getWithdrawalRequests(
          String? cooperativeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWithdrawalRequests,
          [cooperativeId],
        ),
        returnValue: _i12.Future<List<_i5.WithdrawalRequest>>.value(
            <_i5.WithdrawalRequest>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i5.WithdrawalRequest>>.value(
                <_i5.WithdrawalRequest>[]),
      ) as _i12.Future<List<_i5.WithdrawalRequest>>);

  @override
  _i12.Future<List<_i8.Transaction>> getTransactions(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [walletId],
        ),
        returnValue:
            _i12.Future<List<_i8.Transaction>>.value(<_i8.Transaction>[]),
        returnValueForMissingStub:
            _i12.Future<List<_i8.Transaction>>.value(<_i8.Transaction>[]),
      ) as _i12.Future<List<_i8.Transaction>>);
}
